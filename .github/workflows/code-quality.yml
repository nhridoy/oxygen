name: Python Code Quality

on:
  pull_request:
    types:
      - closed
    branches:
      - dev

jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Fail Fast on Dependency Issues
        run: |
          uv lock --locked || exit 1


  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup
      - run: uvx ruff check .

  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup
      - run: uvx ruff format --check .

#  type_consistency:
#    runs-on: ubuntu-latest
#    needs: [lock_file]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - uses: ./.github/actions/setup
#      - run: uv run pyright .
#
#  tests:
#    runs-on: ubuntu-latest
#    needs: [lock_file]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - uses: ./.github/actions/setup
#      - run: uv run pytest -v --durations=0 --cov --cov-report=xml
#
#      - name: Upload Coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [linting, formatting, type_consistency, tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USERNAME }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/potentialinc/enterMong-backend
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1  # Speed up builds by using inline cache

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Execute remote SSH commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            for i in {1..3}; do
              cd EnterMong-Backend &&
              docker compose pull &&
              docker compose up -d --build --force-recreate &&
              docker system prune -f && break || sleep 10
            done